*nvim-searchlist.txt* Adds a searchlist to Neovim.

Author:  Joe Ellis
License: Same terms as Vim itself (see |license|)

------------------------------------------------------------------------------

THIS PLUGIN IS DEPRECATED

This plugin is deprecated in favour of vim-searchlist, which supports both Vim
and Neovim.
>
    https://github.com/joechrisellis/vim-searchlist
<
------------------------------------------------------------------------------


CONTENTS                                        *searchlist* *searchlist-contents*

    INTRODUCTION...................................: |searchlist-introduction|
    INSTALLATION...................................: |searchlist-installation|
    MAPS...................................................: |searchlist-maps|
    CUSTOMISATION.................................: |searchlist-customisation|
    IMPLEMENTATION...............................: |searchlist-implementation|
    TODO...................................................: |searchlist-todo|
    ISSUES...............................................: |searchlist-issues|


INTRODUCTION                                    *searchlist-introduction*

This plugin adds a searchlist to Neovim. The searchlist is similar to the
jumplist, but instead of storing jumps, it stores the locations where you last
initiated a search.

Since a Vim search can only move within the current buffer, the searchlist is
buffer-local. By default, the searchlist remembers 100 entries (the same as
the jumplist), but this is configurable with the |g:searchlist_max_capacity|
variable.


INSTALLATION                                    *searchlist-installation*

The easiest way to install the plugin is with a plugin manager.

- vim-plug: https://github.com/junegunn/vim-plug
- Vundle:   https://github.com/VundleVim/Vundle.vim

If you use one, just follow the instructions in its documentation For
example, if you use vim-plug, you would want to add the following line to your
Vim configuration:
>
    Plug 'joechrisellis/nvim-searchlist'
<

MAPS                                            *searchlist-maps*

The plugin introduces two normal mode maps:

                                                *g\*
`g\`                    Jump backwards [count] positions in the searchlist
                      ([count] defaults to one). If [count] is larger than the
                      number of positions in the searchlist, go to the
                      earliest search position.

                                                *g/*
`g/`                    Jump forwards [count] positions in the searchlist
                      ([count] defaults to one).

                                                *searchlist-shadows*
In order to save positions to the searchlist, the plugin also shadows the
following built-in maps:

    `/`, `?`, `*`, `#`, `g*`, `g#`, `gd`, `gD`


CUSTOMISATION                                   *searchlist-customisation*

                                                *g:searchlist_maps*
If you would prefer to disable some or all of the default maps, the
`g:searchlist_maps` variable can be used.

`let g:searchlist_maps = "none"`
Do not remap any keys.

`let g:searchlist_maps = "all"`
Default, use the default set of maps.

`let g:searchlist_maps = "search_only"`
Only set search maps.

`let g:searchlist_maps = "jump_only"`
Only set jump maps (|g\|, |g/|).

                                                *searchlist-custom-jump-maps*
                                                *searchlist#JumpBackwards*
                                                *searchlist#JumpForwards*
If you want to create custom maps for jumping backwards/forwards in the
searchlist, you can use the `searchlist#JumpBackwards` and
`searchlist#JumpForwards` functions. For example:
>
    nnoremap <silent> <leader>sf :call searchlist#JumpForwards()<cr>
    nnoremap <silent> <leader>sb :call searchlist#JumpBackwards()<cr>
<

                                                *searchlist-custom-search-maps*
                                                *searchlist#AddEntry*

If you already have maps inside your Neovim configuration that shadow the
built-in Neovim search maps (see |searchlist-shadows|), you will probably
require some extra configuration to get them to play nicely with this plugin.

As an example, suppose that you have the following popular map in your Neovim
configuration:
>
    nnoremap / /\v
<
To preserve this behaviour, but also have this plugin record your position in
the searchlist, you would want something like this:
>
    function! CustomSearchBinding() abort
        call searchlist#AddEntry()
        return "/\\v"
    endfunction

    nnoremap <expr> / CustomSearchBinding()
<
                                                *g:searchlist_max_capacity*

By default, the searchlist remembers the last 100 positions where you
initiated the search (the same as the jumplist). You can change the maximum
capacity of the jumplist by setting the `g:searchlist_max_capacity` variable
appropriately.


IMPLEMENTATION                                  *searchlist-implementation*

The plugin uses the fantastic Neovim |extmarks| to track mark where each
search was initiated. Entries in the searchlist are therefore resistant to
edits in the document and will do the "right thing" the vast majority of the
time.

This is the main reason why this plugin is a Neovim plugin rather than a Vim
plugin. Neovim provides better tools for implementing such things.


TODO                                            *searchlist-todo*

In no particular order:

[ ] Find an alternative to `cursor()` that modifies the jumplist
[ ] Squash bugs
[x] Complete docs
[x] Do not add duplicate entries to the searchlist


ISSUES                                          *searchlist-issues*

Raise an issue on GitHub if something's wrong.

 vim:tw=78:ts=8:ft=help:norl:
